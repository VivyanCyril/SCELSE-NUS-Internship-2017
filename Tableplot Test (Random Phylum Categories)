library("phyloseq")
require(tabplot)
load("F:/Lena/R/R Data/sample.taxa.sediment.RData")


## Make matrix or data.frame from Phyloseq object (to use as input for tableplot)

ms <- otu_table(sample.taxa.sediment, errorIfNULL = TRUE, taxa_are_rows = TRUE) # Extract OTU Table, format is matrix
df_ms <- as.data.frame(otu_table(sample.taxa.sediment), taxa_are_rows = TRUE) # Transform OTU Table to data.frame
rms <- transform_sample_counts(ms, function(x) x/sum(x)) # matrix values as relative abundances
df_rms <- as.data.frame(rms) # OTU data.frame as relative abundances
df_ts <- as.data.frame(sample_data(sample.taxa.sediment)) # Extract Sample Data, format is data.frame


## format the data..........


## make new data.frame with categories, e.g. categorize according to Phylum
df_rms[,"Phylum"] <- NA # add empty column

# make vector with random categories
Proteobacteria
Cyanobacteria
Actinobacteria
Bacteroidetes
Firmicutes
Chlamydiae

categories <- c(rep("Proteobacteria", each=800), rep("Cyanobacteria", each=700), rep("Actinobacteria", each=1500), rep("Bacteroidetes", each=2000), rep("Firmicutes", each=500), rep("Chlamydiae", each=2857))
length(categories) # check length of vector
df_rms$Phylum <- categories # replace empty column with vector (Category names)

# make new data.frame for each category
Proteo <- subset(df_rms, Phylum == "Proteobacteria") # returns data.frame
Cyano <- subset(df_rms, Phylum == "Cyanobacteria") # returns data.frame
Actino <- subset(df_rms, Phylum == "Actinobacteria") # returns data.frame
Bactero <- subset(df_rms, Phylum == "Bacteroidetes") # returns data.frame
Firmi <- subset(df_rms, Phylum == "Firmicutes") # returns data.frame
Chlam <- subset(df_rms, Phylum == "Chlamydiae") # returns data.frame

Proteo_sum <- as.data.frame(colSums(Proteo[,2:61])) # returns data.frame
Cyano_sum <- as.data.frame(colSums(Cyano[,2:61])) # returns data.frame
Actino_sum <- as.data.frame(colSums(Actino[,2:61])) # returns data.frame
Bactero_sum <- as.data.frame(colSums(Bactero[,2:61])) # returns data.frame
Firmi_sum <- as.data.frame(colSums(Firmi[,2:61])) # returns data.frame
Chlam_sum <- as.data.frame(colSums(Chlam[,2:61])) # returns data.frame


Proteo_sum[,"Phylum"] <- "Proteobacteria" # add new col categorizing Phylum
Cyano_sum[,"Phylum"] <- "Cyanobacteria" # add new col categorizing Phylum
Actino_sum[,"Phylum"] <- "Actinobacteria" # add new col categorizing Phylum
Bactero_sum[,"Phylum"] <- "Bacteroidetes" # add new col categorizing Phylum
Firmi_sum[,"Phylum"] <- "Firmicutes" # add new col categorizing Phylum
Chlam_sum[,"Phylum"] <- "Chlamydiae" # add new col categorizing Phylum


colnames(Proteo_sum)[1] <- "Relative_Abundance" # rename first column
colnames(Cyano_sum)[1] <- "Relative_Abundance" # rename first column
colnames(Actino_sum)[1] <- "Relative_Abundance" # rename first column
colnames(Bactero_sum)[1] <- "Relative_Abundance" # rename first column
colnames(Firmi_sum)[1] <- "Relative_Abundance" # rename first column
colnames(Chlam_sum)[1] <- "Relative_Abundance" # rename first column


setDT(Proteo_sum, keep.rownames = TRUE)[] # rownames as column
setDT(Cyano_sum, keep.rownames = TRUE)[] # rownames as column
setDT(Actino_sum, keep.rownames = TRUE)[] # rownames as column
setDT(Bactero_sum, keep.rownames = TRUE)[] # rownames as column
setDT(Firmi_sum, keep.rownames = TRUE)[] # rownames as column
setDT(Chlam_sum, keep.rownames = TRUE)[] # rownames as column


New_df_1 <- merge(Proteo_sum, Cyano_sum, all.x = T, all.y = T, sort=F ) # merge data.frames together
New_df_2 <- merge(New_df_1, Actino_sum, all.x = T, all.y = T, sort=F )
New_df_3 <- merge(New_df_2, Bactero_sum, all.x = T, all.y = T, sort=F )
New_df_4 <- merge(New_df_3, Firmi_sum, all.x = T, all.y = T, sort=F )
New_df <- merge(New_df_4, Chlam_sum, all.x = T, all.y = T, sort=F )

colnames(New_df)[1] <- "Sample" # rename first column
nrow(New_df) # check, if merged correctly there should be 360 rows



tableplot(New_df, sortCol = Sample)
