library(phyloseq)
library(ggplot2)
library(vegan)
library(compositions)

#Define functions
#Geometric mean  calculation
gm_mean = function(x, na.rm=TRUE){
  exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}

#Centered Log-Ratio (CLR)
clr = function(x, base=2){
  x = log((x / gm_mean(x)), base)
  x[!is.finite(x) | is.na(x)] = 0.0
  return(x)
}

#Format data
Metals_Sed[ Metals_Sed == "<0.000" ] <- NA # remove values below detection limit
metals.ra = as.data.frame(acomp(Metals_Sed[,5:ncol(Metals_Sed)])) # convert compositional object to class acomp and save as data.frame
metals.clr.byrow = as.data.frame(apply(metals.ra,1,clr)) # apply function clr

metals.clr <- as.data.frame(t(metals.clr.byrow)) # change rows to column
metals.sizes = cbind(as(Metals_Sed[,1:4], "data.frame"), metals.clr) # combine size parameters with clr values
metals.sizes <- metals.sizes[-c(121:159), ] # remove rows without size info


# loop through lm for all metals
n <- 18
lms.metals <- lapply(5:n, function(x) lm(metals.sizes[,x] ~ as.factor(metals.sizes$Site) + as.factor(metals.sizes$Size)))
summaries <- lapply(lms.metals, summary)
names(summaries) <- c("Mg", "Al", "Cr", "Mn", "Fe", "Co", "Ni", "Cu", "Zn", "As", "Cd", "Pb-01", "Pb-02", "Pb-03") # rename items of list

l <- as.data.frame(lapply(summaries, function(x) x$coefficients[1,])) # extract rows from list
lm.metals.result <- as.data.frame(t(l)) # change rows to column
colnames(lm.metals.result) <- c("Log2Fc", "lfSE", "t", "p") # rename



# Plot results - Boxplots
lm.metals.result[["color"]] = ifelse(lm.metals.result[["Log2Fc"]] >= 0, "positive", "negative") # differentiate between pos/neg

ggplot(data = lm.metals.result ,aes(x=row.names(lm.metals.result),y=Log2Fc, fill = color)) + 
  geom_bar(stat="identity", color = "black")  + 
  labs(y=expression(log[2]~Fold~Change)) + 
  geom_errorbar(aes(ymin=Log2Fc-lfSE, ymax=Log2Fc+lfSE), width=.2,position=position_dodge(.9)) +  
  scale_x_discrete("") + coord_flip() +
  scale_fill_manual(values = c("positive" = "#D3D3D3", "negative" = "#484848"), guide = F) +
  theme_bw() + theme(axis.ticks.y=element_blank(), aspect.ratio = 0.5, axis.text = element_text(color = "black"))
  
  
 
 
# Metals Correlations 
 
m.metals <- metals.sizes[,-c(1:4)] # keep only metals
rownames(m.metals) <- metals.sizes[,1] # sample id as rownames

cor(m.metals)
pairs(m.metals) # visualize 
library(psych)
pairs.panels(m.metals) # very pretty

# visualize points as densities
pairs(m.metals, panel = function(...) smoothScatter(..., nrpoints=0, add=TRUE), oma=c(2,2,2,2))

corr.test(m.metals) # gives a table of correlation coefficients and one of p-values

